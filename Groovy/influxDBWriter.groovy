import java.net.*

//Fetching JMeter response metrics

t = sampleResult.getTime()
idt = sampleResult.getIdleTime()
lt = sampleResult.getLatency()
ct = sampleResult.getConnectTime()
ts = sampleResult.getTimeStamp()
s = sampleResult.isResponseCodeOK()
lb = sampleResult.getSampleLabel()
rc = sampleResult.getResponseCode()
rm = sampleResult.getResponseMessage()
tn = sampleResult.getThreadName()
dt = sampleResult.getDataType()
by = sampleResult.getBytesAsLong()
sby = sampleResult.getSentBytes() 
ng = sampleResult.getGroupThreads()
na = sampleResult.getAllThreads()
url = sampleResult.getUrlAsString()
//Build is passed as part of the execution batch file
build = vars.get('version') 
//Area refers to the execution area and should be set in the execution test script at the test plan level. 
area = vars.get('area')
//Scenario refers to specific scenario within the execution area and should be set in the execution test script at individual scenario levels. 
scenario = vars.get('scenario')
//No Of Users is passed as part of the execution batch file
noOfUsers = vars.get('noOfUsers')
//Run ID is passed as part of the execution batch file. 
runId = vars.get('runId')
//Label is also passed as a tag to allow detailed filtering per API on Grafana dashboards. 
labelTag = lb.replace(" ", "\\ ")

//Setting Tags that will be used on InfluxDb to recognize this test run

def body_db_tags = 'jmeter_data,build='+build+',runid='+runId+',label='+labelTag+',area='+area+',scenario='+scenario+',noOfUsers='+noOfUsers+'

//Setting Body data that will be passed to InfluxDb for performance metrics

def body_data = ' t='+t+',it='+idt+',lt='+lt+',ct='+ct+',ts='+ts+',lb="'+lb+'"'+',rcode="'+rc+'"'+',rm="'+rm+'"'+',tn="'+tn+'"'+',dt="'+dt+'"'+',by='+by+',sby='+sby+',ng='+ng+',na='+na+',url="'+url+'"'+',s='+s

// Setting timestamp that will be stamped for individual entry in InfluxDb database
def body_ts = ' '+ts

//Combining the three above to create a single body to be passed below
def body = body_db_tags+body_data+body_ts


//Setting up the path to InfluxDb server to upload metrics. Precision value is set to "ms" as that is usually how timestamps are generated by HMeter. 
HttpURLConnection influxWritePath = (HttpURLConnection) new URL('http://influxDbServer/write?db=JMeterDBName&precision=ms').openConnection()
influxWritePath.setRequestMethod('POST')
influxWritePath.setDoOutput(true)
influxWritePath.setRequestProperty("Content-type","text/plain")
influxWritePath.setRequestProperty("Accept", "*/*");

OutputStream output = influxWritePath.getOutputStream()
OutputStreamWriter osw = new OutputStreamWriter(output, "UTF-8")
osw.write(body)
osw.close()
output.close()

//BELOW SECTION IS ONLY TO CHECK RESPONSE FROM INFLUX. CAN BE DISABLED IF THERE ARE NO ISSUES IN THIS SCRIPT
	BufferedReader br = new BufferedReader(new InputStreamReader(influxWritePath.getInputStream(), "utf-8"))
    StringBuilder response = new StringBuilder();
    String responseLine = null;
    while ((responseLine = br.readLine()) != null) {
        response.append(responseLine.trim());
    }
//    log.info(response.toString());
